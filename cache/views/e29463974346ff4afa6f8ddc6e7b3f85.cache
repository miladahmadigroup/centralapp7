a:5:{s:4:"html";s:12656:"
<div class="card">
    <div class="card-header">
        <h5 class="mb-0">ورود به سیستم</h5>
    </div>
    <div class="card-body">
        <form id="loginForm">
            <div class="mb-3">
                <label class="form-label">ایمیل یا موبایل <span class="text-danger">*</span></label>
                <input type="text" name="email" class="form-control" required placeholder="ایمیل یا شماره موبایل">
            </div>
            
            <div class="mb-3">
                <label class="form-label">رمز عبور <span class="text-danger">*</span></label>
                <input type="password" name="password" class="form-control" required>
            </div>
            
            <!-- کپچا -->
            <div class="mb-3">
                <label class="form-label">کد تصویر <span class="text-danger">*</span></label>
                <div class="d-flex align-items-center gap-2">
                    <input type="text" name="captcha" class="form-control" style="flex: 1;" required placeholder="کد تصویر را وارد کنید">
                    <img id="loginCaptchaImage" src="" alt="کپچا" style="border: 1px solid #ddd; border-radius: 4px; cursor: pointer;" onclick="refreshLoginCaptcha()">
                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="refreshLoginCaptcha()">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <small class="text-muted">روی تصویر کلیک کنید تا تازه شود</small>
            </div>
            
            <button type="submit" class="btn btn-primary w-100">ورود</button>
        </form>
        
                <div class="text-center mt-3">
            <small>حساب کاربری ندارید؟ <a href="#" onclick="showRegisterForm()">ثبت‌نام کنید</a></small>
        </div>
                
        <!-- فرم تأیید ایمیل برای کاربران pending -->
        <div id="pendingVerificationAlert" style="display: none;" class="mt-3">
            <div class="alert alert-warning">
                <h6 class="alert-heading">حساب شما تأیید نشده است</h6>
                <p class="mb-2">برای ورود، ابتدا باید ایمیل خود را تأیید کنید.</p>
                <div class="d-grid gap-2">
                    <button class="btn btn-warning btn-sm" onclick="showPendingVerification()">
                        <i class="fas fa-envelope me-1"></i>تأیید ایمیل
                    </button>
                </div>
            </div>
        </div>
        
        <!-- فرم تأیید ایمیل برای کاربران pending -->
        <div id="pendingVerificationForm" style="display: none;" class="mt-3">
            <div class="card border-warning">
                <div class="card-header bg-warning text-dark">
                    <h6 class="mb-0">تأیید ایمیل</h6>
                </div>
                <div class="card-body">
                    <form id="pendingEmailVerificationForm">
                        <input type="hidden" id="pendingUserId" name="user_id">
                        
                        <div class="mb-3">
                            <label class="form-label">کد تأیید (6 رقم)</label>
                            <input type="text" name="code" class="form-control text-center" maxlength="6" required placeholder="963741">
                            <small class="text-muted">کد تست: 963741</small>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-warning">تأیید و ورود</button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="resendPendingVerification()">
                                ارسال مجدد کد
                            </button>
                            <button type="button" class="btn btn-link btn-sm" onclick="hidePendingVerification()">
                                بازگشت
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <div id="loginResult" class="mt-3"></div>
    </div>
</div>

<script>
let pendingUserId = null;

// بارگذاری کپچا هنگام شروع
document.addEventListener('DOMContentLoaded', function() {
    refreshLoginCaptcha();
});

// تولید کپچای جدید برای ورود
function refreshLoginCaptcha() {
    if (window.callCentralAPI) {
        window.callCentralAPI('user-management', 'captcha', {})
            .then(response => {
                if (response.success) {
                    document.getElementById('loginCaptchaImage').src = response.captcha;
                } else {
                    console.error('خطا در بارگذاری کپچا:', response.message);
                }
            })
            .catch(error => {
                console.error('خطا در ارتباط با سرور کپچا:', error);
            });
    }
}

// مدیریت فرم ورود
document.getElementById('loginForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData);
    
    if (window.callCentralAPI) {
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'در حال ورود...';
        submitBtn.disabled = true;
        
        window.callCentralAPI('user-management', 'login', data)
            .then(response => {
                if (response.success) {
                    // ذخیره token و اطلاعات کاربر
                    localStorage.setItem('central_auth_token', response.data.token);
                    localStorage.setItem('central_user_data', JSON.stringify(response.data.user));
                    
                    if (window.showAlert) {
                        window.showAlert('success', response.message);
                    } else {
                        showLoginSuccess(response.message);
                    }
                    
                    // اجرای callback
                    if (window.onCentralLogin) {
                        window.onCentralLogin(response.data);
                    }
                    
                    this.reset();
                    refreshLoginCaptcha();
                } else {
                    // بررسی آیا حساب pending است
                    if (response.data && response.data.verification_required) {
                        pendingUserId = response.data.user_id;
                        document.getElementById('pendingUserId').value = pendingUserId;
                        showPendingVerificationAlert();
                    } else {
                        if (window.showAlert) {
                            window.showAlert('error', response.message);
                        } else {
                            showLoginError(response.message);
                        }
                    }
                    refreshLoginCaptcha(); // تازه کردن کپچا در صورت خطا
                }
            })
            .catch(error => {
                if (window.showAlert) {
                    window.showAlert('error', 'خطا در ورود: ' + error.message);
                } else {
                    showLoginError('خطا در ارتباط با سرور: ' + error.message);
                }
                refreshLoginCaptcha();
            })
            .finally(() => {
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            });
    } else {
        alert('تابع callCentralAPI موجود نیست');
    }
});

// مدیریت فرم تأیید ایمیل برای کاربران pending
document.getElementById('pendingEmailVerificationForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData);
    
    if (window.callCentralAPI) {
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'در حال تأیید...';
        submitBtn.disabled = true;
        
        window.callCentralAPI('user-management', 'verify-email', data)
            .then(response => {
                if (response.success) {
                    showLoginSuccess(response.message + ' اکنون می‌توانید وارد شوید.');
                    hidePendingVerification();
                    
                    // پاک کردن فرم ورود
                    document.getElementById('loginForm').reset();
                    refreshLoginCaptcha();
                } else {
                    showLoginError(response.message);
                }
            })
            .catch(error => {
                showLoginError('خطا در تأیید: ' + error.message);
            })
            .finally(() => {
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            });
    }
});

// نمایش alert برای حساب‌های pending
function showPendingVerificationAlert() {
    document.getElementById('pendingVerificationAlert').style.display = 'block';
}

function showPendingVerification() {
    document.getElementById('pendingVerificationAlert').style.display = 'none';
    document.getElementById('pendingVerificationForm').style.display = 'block';
}

function hidePendingVerification() {
    document.getElementById('pendingVerificationAlert').style.display = 'none';
    document.getElementById('pendingVerificationForm').style.display = 'none';
}

// ارسال مجدد کد تأیید برای کاربران pending
function resendPendingVerification() {
    if (!pendingUserId) {
        showLoginError('شناسه کاربر یافت نشد');
        return;
    }
    
    if (window.callCentralAPI) {
        window.callCentralAPI('user-management', 'resend-verification', {user_id: pendingUserId})
            .then(response => {
                if (response.success) {
                    showLoginSuccess(response.message);
                } else {
                    showLoginError(response.message);
                }
            })
            .catch(error => {
                showLoginError('خطا در ارسال مجدد: ' + error.message);
            });
    }
}

// نمایش پیام‌ها
function showLoginError(message) {
    const resultDiv = document.getElementById('loginResult');
    if (resultDiv) {
        resultDiv.innerHTML = '<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>' + message + '</div>';
    }
}

function showLoginSuccess(message) {
    const resultDiv = document.getElementById('loginResult');
    if (resultDiv) {
        resultDiv.innerHTML = '<div class="alert alert-success"><i class="fas fa-check-circle me-2"></i>' + message + '</div>';
    }
}

function showRegisterForm() {
    if (typeof window.showRegisterForm === 'function') {
        window.showRegisterForm();
    } else {
        alert('لطفاً صفحه ثبت‌نام را باز کنید');
    }
}

// تابع بررسی وضعیت لاگین
function isLoggedIn() {
    return localStorage.getItem('central_auth_token') !== null;
}

// تابع دریافت اطلاعات کاربر
function getCurrentUser() {
    const userData = localStorage.getItem('central_user_data');
    return userData ? JSON.parse(userData) : null;
}

// تابع خروج
function logout() {
    localStorage.removeItem('central_auth_token');
    localStorage.removeItem('central_user_data');
    
    if (typeof window.onCentralLogout === 'function') {
        window.onCentralLogout();
    }
    
    window.location.reload();
}

// Export functions for global use
if (window) {
    window.isLoggedIn = isLoggedIn;
    window.getCurrentUser = getCurrentUser;
    window.logout = logout;
}
</script>";s:7:"expires";i:1755465965;s:7:"created";i:1755462365;s:6:"plugin";s:15:"user-management";s:4:"view";s:5:"login";}